

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 06 21:56:52 2022

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     
    55                           	psect	idataCOMRAM
    56  0000F8                     __pidataCOMRAM:
    57                           	opt callstack 0
    58                           
    59                           ;initializer for _delay_quantity
    60  0000F8  007D               	dw	125
    61  0000                     _PORTDbits	set	3971
    62  0000                     _INTCONbits	set	4082
    63  0000                     _T0CON	set	4053
    64  0000                     _INTCON	set	4082
    65  0000                     _RCONbits	set	4048
    66  0000                     _TRISD	set	3989
    67  0000                     _TRISC	set	3988
    68  0000                     _TRISB	set	3987
    69  0000                     _TRISA	set	3986
    70  0000                     _PORTD	set	3971
    71  0000                     _PORTC	set	3970
    72  0000                     _PORTB	set	3969
    73  0000                     _PORTA	set	3968
    74  0000                     _PORTCbits	set	3970
    75                           
    76                           ; #config settings
    77                           
    78                           	psect	cinit
    79  000074                     __pcinit:
    80                           	opt callstack 0
    81  000074                     start_initialization:
    82                           	opt callstack 0
    83  000074                     __initialization:
    84                           	opt callstack 0
    85                           
    86                           ; Initialize objects allocated to COMRAM (2 bytes)
    87                           ; load TBLPTR registers with __pidataCOMRAM
    88  000074  0EF8               	movlw	low __pidataCOMRAM
    89  000076  6EF6               	movwf	tblptrl,c
    90  000078  0E00               	movlw	high __pidataCOMRAM
    91  00007A  6EF7               	movwf	tblptrh,c
    92  00007C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    93  00007E  6EF8               	movwf	tblptru,c
    94  000080  0009               	tblrd		*+	;fetch initializer
    95  000082  CFF5 F003          	movff	tablat,__pdataCOMRAM
    96  000086  0009               	tblrd		*+	;fetch initializer
    97  000088  CFF5 F004          	movff	tablat,__pdataCOMRAM+1
    98                           
    99                           ; Clear objects allocated to COMRAM (2 bytes)
   100  00008C  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
   101  00008E  6A01               	clrf	__pbssCOMRAM& (0+255),c
   102  000090                     end_of_initialization:
   103                           	opt callstack 0
   104  000090                     __end_of__initialization:
   105                           	opt callstack 0
   106  000090  9007               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   107  000092  9207               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   108  000094  0100               	movlb	0
   109  000096  EF09  F000         	goto	_main	;jump to C main() function
   110                           
   111                           	psect	bssCOMRAM
   112  000001                     __pbssCOMRAM:
   113                           	opt callstack 0
   114  000001                     _ACIONA:
   115                           	opt callstack 0
   116  000001                     	ds	2
   117                           
   118                           	psect	dataCOMRAM
   119  000003                     __pdataCOMRAM:
   120                           	opt callstack 0
   121  000003                     _delay_quantity:
   122                           	opt callstack 0
   123  000003                     	ds	2
   124                           
   125                           	psect	cstackCOMRAM
   126  000005                     __pcstackCOMRAM:
   127                           	opt callstack 0
   128  000005                     ??_stepMotor_anticlockwise_90degrees:
   129  000005                     ??_stepMotor_clockwise_90degrees:
   130  000005                     
   131                           ; 1 bytes @ 0x0
   132  000005                     	ds	2
   133  000007                     
   134                           ; 1 bytes @ 0x2
   135 ;;
   136 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   137 ;;
   138 ;; *************** function _main *****************
   139 ;; Defined at:
   140 ;;		line 114 in file "main.c"
   141 ;; Parameters:    Size  Location     Type
   142 ;;		None
   143 ;; Auto vars:     Size  Location     Type
   144 ;;		None
   145 ;; Return value:  Size  Location     Type
   146 ;;                  1    wreg      void 
   147 ;; Registers used:
   148 ;;		wreg, status,2, status,0, cstack
   149 ;; Tracked objects:
   150 ;;		On entry : 0/0
   151 ;;		On exit  : 0/0
   152 ;;		Unchanged: 0/0
   153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   154 ;;      Params:         0       0       0       0       0       0       0       0       0
   155 ;;      Locals:         0       0       0       0       0       0       0       0       0
   156 ;;      Temps:          0       0       0       0       0       0       0       0       0
   157 ;;      Totals:         0       0       0       0       0       0       0       0       0
   158 ;;Total ram usage:        0 bytes
   159 ;; Hardware stack levels required when called:    2
   160 ;; This function calls:
   161 ;;		_init
   162 ;;		_stepMotor_anticlockwise_90degrees
   163 ;;		_stepMotor_clockwise_90degrees
   164 ;; This function is called by:
   165 ;;		Startup code after reset
   166 ;; This function uses a non-reentrant model
   167 ;;
   168                           
   169                           	psect	text0
   170  000012                     __ptext0:
   171                           	opt callstack 0
   172  000012                     _main:
   173                           	opt callstack 29
   174  000012                     
   175                           ;main.c: 116:     init();
   176  000012  EC24  F000         	call	_init	;wreg free
   177  000016                     l754:
   178                           
   179                           ;main.c: 121:         if(ACIONA){
   180  000016  5001               	movf	_ACIONA^0,w,c
   181  000018  1002               	iorwf	(_ACIONA+1)^0,w,c
   182  00001A  B4D8               	btfsc	status,2,c
   183  00001C  EF12  F000         	goto	u21
   184  000020  EF14  F000         	goto	u20
   185  000024                     u21:
   186  000024  EF0B  F000         	goto	l754
   187  000028                     u20:
   188  000028                     
   189                           ;main.c: 122:             stepMotor_clockwise_90degrees();
   190  000028  EC4D  F000         	call	_stepMotor_clockwise_90degrees	;wreg free
   191  00002C                     
   192                           ;main.c: 123:             PORTDbits.RD0 = 1;
   193  00002C  8083               	bsf	131,0,c	;volatile
   194                           
   195                           ;main.c: 124:             stepMotor_anticlockwise_90degrees();
   196  00002E  EC5D  F000         	call	_stepMotor_anticlockwise_90degrees	;wreg free
   197                           
   198                           ;main.c: 125:             stepMotor_clockwise_90degrees();
   199  000032  EC4D  F000         	call	_stepMotor_clockwise_90degrees	;wreg free
   200  000036                     
   201                           ;main.c: 126:             PORTDbits.RD0 = 0;
   202  000036  9083               	bcf	131,0,c	;volatile
   203  000038                     
   204                           ;main.c: 127:             ACIONA = 0;
   205  000038  0E00               	movlw	0
   206  00003A  6E02               	movwf	(_ACIONA+1)^0,c
   207  00003C  0E00               	movlw	0
   208  00003E  6E01               	movwf	_ACIONA^0,c
   209  000040  EF0B  F000         	goto	l754
   210  000044  EF07  F000         	goto	start
   211  000048                     __end_of_main:
   212                           	opt callstack 0
   213                           
   214 ;; *************** function _stepMotor_clockwise_90degrees *****************
   215 ;; Defined at:
   216 ;;		line 47 in file "main.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;		None
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg
   225 ;; Tracked objects:
   226 ;;		On entry : 0/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   230 ;;      Params:         0       0       0       0       0       0       0       0       0
   231 ;;      Locals:         0       0       0       0       0       0       0       0       0
   232 ;;      Temps:          2       0       0       0       0       0       0       0       0
   233 ;;      Totals:         2       0       0       0       0       0       0       0       0
   234 ;;Total ram usage:        2 bytes
   235 ;; Hardware stack levels used:    1
   236 ;; Hardware stack levels required when called:    1
   237 ;; This function calls:
   238 ;;		Nothing
   239 ;; This function is called by:
   240 ;;		_main
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244                           	psect	text1
   245  00009A                     __ptext1:
   246                           	opt callstack 0
   247  00009A                     _stepMotor_clockwise_90degrees:
   248                           	opt callstack 29
   249  00009A                     
   250                           ;main.c: 58:     PORTCbits.RC0 = 0; PORTCbits.RC1 = 1; PORTCbits.RC2 = 1; PORTCbits.RC4 
      +                          = 0;
   251  00009A  9082               	bcf	130,0,c	;volatile
   252  00009C  8282               	bsf	130,1,c	;volatile
   253  00009E  8482               	bsf	130,2,c	;volatile
   254  0000A0  9882               	bcf	130,4,c	;volatile
   255  0000A2                     
   256                           ;main.c: 59:     _delay((unsigned long)((delay_quantity)*(20000000/4000.0)));
   257  0000A2  0E04               	movlw	4
   258  0000A4  6E06               	movwf	(??_stepMotor_clockwise_90degrees+1)^0,c
   259  0000A6  0E2C               	movlw	44
   260  0000A8  6E05               	movwf	??_stepMotor_clockwise_90degrees^0,c
   261  0000AA  0EAC               	movlw	172
   262  0000AC                     u397:
   263  0000AC  2EE8               	decfsz	wreg,f,c
   264  0000AE  D7FE               	bra	u397
   265  0000B0  2E05               	decfsz	??_stepMotor_clockwise_90degrees^0,f,c
   266  0000B2  D7FC               	bra	u397
   267  0000B4  2E06               	decfsz	(??_stepMotor_clockwise_90degrees+1)^0,f,c
   268  0000B6  D7FA               	bra	u397
   269  0000B8  0012               	return		;funcret
   270  0000BA                     __end_of_stepMotor_clockwise_90degrees:
   271                           	opt callstack 0
   272                           
   273 ;; *************** function _stepMotor_anticlockwise_90degrees *****************
   274 ;; Defined at:
   275 ;;		line 20 in file "main.c"
   276 ;; Parameters:    Size  Location     Type
   277 ;;		None
   278 ;; Auto vars:     Size  Location     Type
   279 ;;		None
   280 ;; Return value:  Size  Location     Type
   281 ;;                  1    wreg      void 
   282 ;; Registers used:
   283 ;;		wreg
   284 ;; Tracked objects:
   285 ;;		On entry : 0/0
   286 ;;		On exit  : 0/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   289 ;;      Params:         0       0       0       0       0       0       0       0       0
   290 ;;      Locals:         0       0       0       0       0       0       0       0       0
   291 ;;      Temps:          2       0       0       0       0       0       0       0       0
   292 ;;      Totals:         2       0       0       0       0       0       0       0       0
   293 ;;Total ram usage:        2 bytes
   294 ;; Hardware stack levels used:    1
   295 ;; Hardware stack levels required when called:    1
   296 ;; This function calls:
   297 ;;		Nothing
   298 ;; This function is called by:
   299 ;;		_main
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303                           	psect	text2
   304  0000BA                     __ptext2:
   305                           	opt callstack 0
   306  0000BA                     _stepMotor_anticlockwise_90degrees:
   307                           	opt callstack 29
   308  0000BA                     
   309                           ;main.c: 28:     PORTCbits.RC0 = 0; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbits.RC4 
      +                          = 1;
   310  0000BA  9082               	bcf	130,0,c	;volatile
   311  0000BC  9282               	bcf	130,1,c	;volatile
   312  0000BE  8482               	bsf	130,2,c	;volatile
   313  0000C0  8882               	bsf	130,4,c	;volatile
   314  0000C2                     
   315                           ;main.c: 29:     _delay((unsigned long)((delay_quantity)*(20000000/4000.0)));
   316  0000C2  0E04               	movlw	4
   317  0000C4  6E06               	movwf	(??_stepMotor_anticlockwise_90degrees+1)^0,c
   318  0000C6  0E2C               	movlw	44
   319  0000C8  6E05               	movwf	??_stepMotor_anticlockwise_90degrees^0,c
   320  0000CA  0EAC               	movlw	172
   321  0000CC                     u407:
   322  0000CC  2EE8               	decfsz	wreg,f,c
   323  0000CE  D7FE               	bra	u407
   324  0000D0  2E05               	decfsz	??_stepMotor_anticlockwise_90degrees^0,f,c
   325  0000D2  D7FC               	bra	u407
   326  0000D4  2E06               	decfsz	(??_stepMotor_anticlockwise_90degrees+1)^0,f,c
   327  0000D6  D7FA               	bra	u407
   328  0000D8  0012               	return		;funcret
   329  0000DA                     __end_of_stepMotor_anticlockwise_90degrees:
   330                           	opt callstack 0
   331                           
   332 ;; *************** function _init *****************
   333 ;; Defined at:
   334 ;;		line 77 in file "main.c"
   335 ;; Parameters:    Size  Location     Type
   336 ;;		None
   337 ;; Auto vars:     Size  Location     Type
   338 ;;		None
   339 ;; Return value:  Size  Location     Type
   340 ;;                  1    wreg      void 
   341 ;; Registers used:
   342 ;;		wreg, status,2
   343 ;; Tracked objects:
   344 ;;		On entry : 0/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   348 ;;      Params:         0       0       0       0       0       0       0       0       0
   349 ;;      Locals:         0       0       0       0       0       0       0       0       0
   350 ;;      Temps:          0       0       0       0       0       0       0       0       0
   351 ;;      Totals:         0       0       0       0       0       0       0       0       0
   352 ;;Total ram usage:        0 bytes
   353 ;; Hardware stack levels used:    1
   354 ;; Hardware stack levels required when called:    1
   355 ;; This function calls:
   356 ;;		Nothing
   357 ;; This function is called by:
   358 ;;		_main
   359 ;; This function uses a non-reentrant model
   360 ;;
   361                           
   362                           	psect	text3
   363  000048                     __ptext3:
   364                           	opt callstack 0
   365  000048                     _init:
   366                           	opt callstack 29
   367  000048                     
   368                           ;main.c: 78:     PORTA = 0b00000000;
   369  000048  0E00               	movlw	0
   370  00004A  6E80               	movwf	128,c	;volatile
   371                           
   372                           ;main.c: 79:     PORTB = 0b00000000;
   373  00004C  0E00               	movlw	0
   374  00004E  6E81               	movwf	129,c	;volatile
   375                           
   376                           ;main.c: 80:     PORTC = 0b00000000;
   377  000050  0E00               	movlw	0
   378  000052  6E82               	movwf	130,c	;volatile
   379                           
   380                           ;main.c: 81:     PORTD = 0b00000000;
   381  000054  0E00               	movlw	0
   382  000056  6E83               	movwf	131,c	;volatile
   383                           
   384                           ;main.c: 83:     TRISA = 0b01000000;
   385  000058  0E40               	movlw	64
   386  00005A  6E92               	movwf	146,c	;volatile
   387                           
   388                           ;main.c: 84:     TRISB = 0b00000000;
   389  00005C  0E00               	movlw	0
   390  00005E  6E93               	movwf	147,c	;volatile
   391                           
   392                           ;main.c: 85:     TRISC = 0b00000000;
   393  000060  0E00               	movlw	0
   394  000062  6E94               	movwf	148,c	;volatile
   395                           
   396                           ;main.c: 86:     TRISD = 0b00000000;
   397  000064  0E00               	movlw	0
   398  000066  6E95               	movwf	149,c	;volatile
   399  000068                     
   400                           ;main.c: 88:     RCONbits.IPEN = 0;
   401  000068  9ED0               	bcf	208,7,c	;volatile
   402                           
   403                           ;main.c: 89:     INTCON = 0b10100000;
   404  00006A  0EA0               	movlw	160
   405  00006C  6EF2               	movwf	242,c	;volatile
   406                           
   407                           ;main.c: 91:     T0CON = 0b10000110;
   408  00006E  0E86               	movlw	134
   409  000070  6ED5               	movwf	213,c	;volatile
   410  000072  0012               	return		;funcret
   411  000074                     __end_of_init:
   412                           	opt callstack 0
   413                           
   414 ;; *************** function _myIsr *****************
   415 ;; Defined at:
   416 ;;		line 99 in file "main.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   430 ;;      Params:         0       0       0       0       0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0       0       0       0       0
   432 ;;      Temps:          0       0       0       0       0       0       0       0       0
   433 ;;      Totals:         0       0       0       0       0       0       0       0       0
   434 ;;Total ram usage:        0 bytes
   435 ;; Hardware stack levels used:    1
   436 ;; This function calls:
   437 ;;		Nothing
   438 ;; This function is called by:
   439 ;;		Interrupt level 2
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443                           	psect	intcode
   444  000008                     __pintcode:
   445                           	opt callstack 0
   446  000008                     _myIsr:
   447                           	opt callstack 29
   448                           
   449                           ;incstack = 0
   450  000008  8207               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   451  00000A  ED6D  F000         	call	int_func,f	;refresh shadow registers
   452                           
   453                           	psect	intcode_body
   454  0000DA                     __pintcode_body:
   455                           	opt callstack 29
   456  0000DA                     int_func:
   457                           	opt callstack 29
   458  0000DA  0006               	pop		; remove dummy address from shadow register refresh
   459  0000DC                     
   460                           ;main.c: 103:     if(INTCONbits.TMR0IF){
   461  0000DC  A4F2               	btfss	242,2,c	;volatile
   462  0000DE  EF73  F000         	goto	i2u1_41
   463  0000E2  EF75  F000         	goto	i2u1_40
   464  0000E6                     i2u1_41:
   465  0000E6  EF7A  F000         	goto	i2l49
   466  0000EA                     i2u1_40:
   467  0000EA                     
   468                           ;main.c: 104:         INTCONbits.TMR0IF = 0;
   469  0000EA  94F2               	bcf	242,2,c	;volatile
   470  0000EC                     
   471                           ;main.c: 106:         ACIONA = 1;
   472  0000EC  0E00               	movlw	0
   473  0000EE  6E02               	movwf	(_ACIONA+1)^0,c
   474  0000F0  0E01               	movlw	1
   475  0000F2  6E01               	movwf	_ACIONA^0,c
   476  0000F4                     i2l49:
   477  0000F4  9207               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   478  0000F6  0011               	retfie		f
   479  0000F8                     __end_of_myIsr:
   480                           	opt callstack 0
   481  0000                     
   482                           	psect	rparam
   483  0000                     
   484                           	psect	temp
   485  000007                     btemp:
   486                           	opt callstack 0
   487  000007                     	ds	1
   488  0000                     int$flags	set	btemp
   489  0000                     wtemp8	set	btemp+1
   490  0000                     ttemp5	set	btemp+1
   491  0000                     ttemp6	set	btemp+4
   492  0000                     ttemp7	set	btemp+8
   493                           tosu	equ	0xFFF
   494                           tosh	equ	0xFFE
   495                           tosl	equ	0xFFD
   496                           stkptr	equ	0xFFC
   497                           pclatu	equ	0xFFB
   498                           pclath	equ	0xFFA
   499                           pcl	equ	0xFF9
   500                           tblptru	equ	0xFF8
   501                           tblptrh	equ	0xFF7
   502                           tblptrl	equ	0xFF6
   503                           tablat	equ	0xFF5
   504                           prodh	equ	0xFF4
   505                           prodl	equ	0xFF3
   506                           indf0	equ	0xFEF
   507                           postinc0	equ	0xFEE
   508                           postdec0	equ	0xFED
   509                           preinc0	equ	0xFEC
   510                           plusw0	equ	0xFEB
   511                           fsr0h	equ	0xFEA
   512                           fsr0l	equ	0xFE9
   513                           wreg	equ	0xFE8
   514                           indf1	equ	0xFE7
   515                           postinc1	equ	0xFE6
   516                           postdec1	equ	0xFE5
   517                           preinc1	equ	0xFE4
   518                           plusw1	equ	0xFE3
   519                           fsr1h	equ	0xFE2
   520                           fsr1l	equ	0xFE1
   521                           bsr	equ	0xFE0
   522                           indf2	equ	0xFDF
   523                           postinc2	equ	0xFDE
   524                           postdec2	equ	0xFDD
   525                           preinc2	equ	0xFDC
   526                           plusw2	equ	0xFDB
   527                           fsr2h	equ	0xFDA
   528                           fsr2l	equ	0xFD9
   529                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      2       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_stepMotor_anticlockwise_90degrees
    _main->_stepMotor_clockwise_90degrees

Critical Paths under _myIsr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
  _stepMotor_anticlockwise_90degrees
      _stepMotor_clockwise_90degrees
 ---------------------------------------------------------------------------------
 (1) _stepMotor_clockwise_90degrees                        2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _stepMotor_anticlockwise_90degrees                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myIsr                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _stepMotor_anticlockwise_90degrees
   _stepMotor_clockwise_90degrees

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      2       6       1        6.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       6      20        0.0%
DATA                 0      0       6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 06 21:56:52 2022

                                        l40 00B8                                          l43 0072  
                                        l37 00D8                                          u20 0028  
                                        u21 0024                                         l740 00A2  
                                       l742 0048                                         l734 00BA  
                                       l744 0068                                         l736 00C2  
                                       l760 0036                                         l752 0012  
                                       l738 009A                                         l762 0038  
                                       l754 0016                                         l756 0028  
                                       l758 002C                                         u407 00CC  
                                       u397 00AC                                         wreg 000FE8  
                                      i2l49 00F4                                        _main 0012  
                                      _init 0048                                        btemp 0007  
                                      start 000E                                ___param_bank 000000  
                                     ?_main 0005                                       ?_init 0005  
                                     _T0CON 000FD5                                       i2l750 00EC  
                                     i2l746 00DC                                       i2l748 00EA  
                                     _PORTA 000F80                                       _PORTB 000F81  
                                     _PORTC 000F82                                       _PORTD 000F83  
                                     _TRISA 000F92                                       _TRISB 000F93  
                                     _TRISC 000F94                                       _TRISD 000F95  
                                     _myIsr 0008                                       tablat 000FF5  
                                     ttemp5 0008                                       ttemp6 000B  
                                     ttemp7 000F                                       status 000FD8  
                                     wtemp8 0008                             __initialization 0074  
                              __end_of_main 0048                                __end_of_init 0074  
                                    ??_main 0007                                      ??_init 0005  
                             __activetblptr 000000                                      _ACIONA 0001  
                                    ?_myIsr 0005                                      _INTCON 000FF2  
                                    i2u1_40 00EA                                      i2u1_41 00E6  
                              __pdataCOMRAM 0003                                      tblptrh 000FF7  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                                __accesstop 0060                     __end_of__initialization 0090  
                             ___rparam_used 000001                              __pcstackCOMRAM 0005  
                             __end_of_myIsr 00F8                                     ??_myIsr 0005  
                            _delay_quantity 0003                                     __Hparam 0000  
                                   __Lparam 0000                                     __pcinit 0074  
                                   __ramtop 0800                                     __ptext0 0012  
                                   __ptext1 009A                                     __ptext2 00BA  
                                   __ptext3 0048                              __pintcode_body 00DA  
                      end_of_initialization 0090                                     int_func 00DA  
 __end_of_stepMotor_anticlockwise_90degrees 00DA  __size_of_stepMotor_anticlockwise_90degrees 0020  
       ??_stepMotor_anticlockwise_90degrees 0005          ?_stepMotor_anticlockwise_90degrees 0005  
         _stepMotor_anticlockwise_90degrees 00BA                                   _PORTCbits 000F82  
                                 _PORTDbits 000F83       __end_of_stepMotor_clockwise_90degrees 00BA  
    __size_of_stepMotor_clockwise_90degrees 0020               _stepMotor_clockwise_90degrees 009A  
                             __pidataCOMRAM 00F8                         start_initialization 0074  
                               __pbssCOMRAM 0001                                   __pintcode 0008  
            ?_stepMotor_clockwise_90degrees 0005                              __size_of_myIsr 00F0  
                                  _RCONbits 000FD0                                    __Hrparam 0000  
                                  __Lrparam 0000                               __size_of_main 0036  
                             __size_of_init 002C                                    int$flags 0007  
                                _INTCONbits 000FF2                                    intlevel2 0000  
           ??_stepMotor_clockwise_90degrees 0005  
